<launch>

    <param name="robot_description" command="$(find xacro)/xacro $(find robot_description)/urdf/xacro/demo01.xacro"/>

    <!--    <node pkg="rviz" type="rviz" name="rviz"/>-->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find robot_description)/config/rviz/mycar.rviz"/>
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>
    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" output="screen"/>
<!--    <node pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" name="joint_state_publisher_gui" output="screen" />-->

    <include file="$(find gazebo_ros)/launch/empty_world.launch" />

    <!-- 在 gazebo 中显示机器人模型 -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_model" args="-urdf -model mycar -param robot_description" output="screen"/>

    <!-- 加载 controller.yaml 文件 -->
    <rosparam file="$(find robot_description)/config/controllers.yaml" command="load"/>

    <!-- 使用 controller_manger 加载插件，对应着controller.yaml 文件 -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" args="
        controller/test_controller
        controller/joint_state_controller">
    </node>

</launch>